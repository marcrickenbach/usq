/** ****************************************************************************
 * @brief Events generated by USB module.
 *
 * The public events USB module generates.
 */

#ifndef FKMG_USB_EVT_H
#define FKMG_USB_EVT_H

#ifdef __cplusplus
extern "C" {
#endif

/* *****************************************************************************
 * Includes
 */

#include <zephyr/kernel.h>

#include "id.h"

/* *****************************************************************************
 * Events
 */

/* Signals that can be generated as part of an event. */
enum USB_Evt_Sig{
    k_USB_Evt_Sig_Beg,                        // Inclusive
    k_USB_Evt_Sig_Min = k_USB_Evt_Sig_Beg,    // Inclusive
    k_USB_Evt_Sig_1st = k_USB_Evt_Sig_Beg,    // Inclusive

    k_USB_Evt_Sig_Instance_Initialized = k_USB_Evt_Sig_Beg,
    #if CONFIG_FKMG_USB_SHUTDOWN_ENABLED
    k_USB_Evt_Sig_Instance_Deinitialized,
    #endif
    k_USB_Evt_Sig_End,                        // Exclusive
    k_USB_Evt_Sig_Max = k_USB_Evt_Sig_End - 1,// Inclusive
    k_USB_Evt_Sig_Lst = k_USB_Evt_Sig_End - 1,// Inclusive
    k_USB_Evt_Sig_Cnt = k_USB_Evt_Sig_End
                      - k_USB_Evt_Sig_Beg,	  // Inclusive
	k_USB_Evt_Sig_Ivd = k_USB_Evt_Sig_End
};

/* Forward references to prevent include interdependent items getting declared
 * out-of-order. */
struct USB_Instance;

/* Data signal k_USB_Evt_Sig_Instance_Initialized can generate. */
struct USB_Evt_Data_Instance_Initialized{
    struct USB_Instance * p_inst;
};

/* Events (i.e. signal + signal's data if any) that can be generated. */
struct USB_Evt{
	enum USB_Evt_Sig sig;
	union USB_Evt_Data{
        struct USB_Evt_Data_Instance_Initialized     initd;
	}data;
};

#ifdef __cplusplus
}
#endif

#endif /* FKMG_USB_EVT_H */
