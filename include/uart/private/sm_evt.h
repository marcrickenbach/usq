/** ****************************************************************************
 * @brief Internal state machine events generated by UART.
 */

#ifndef FKMG_UART_SM_EVT_H
#define FKMG_UART_SM_EVT_H

#ifdef __cplusplus
extern "C" {
#endif

/* *****************************************************************************
 * Includes
 */

#include <zephyr/kernel.h>

#include "../id.h"
#include "../instance_cfg.h"

/* *****************************************************************************
 * Events
 */

/* Signals that can be generated as part of an event. */
enum UART_SM_Evt_Sig{
    k_UART_SM_Evt_Sig_Beg,                           // Inclusive
    k_UART_SM_Evt_Sig_Min = k_UART_SM_Evt_Sig_Beg,    // Inclusive
    k_UART_SM_Evt_Sig_1st = k_UART_SM_Evt_Sig_Beg,    // Inclusive

	k_UART_SM_Evt_Sig_Init_Instance = k_UART_SM_Evt_Sig_Beg,
    #if CONFIG_FKMG_UART_ALLOW_SHUTDOWN
	k_UART_SM_Evt_Sig_Deinit_Instance,
    #endif
	k_UART_SM_Evt_Sig_Write_MIDI,
	k_UART_SM_Evt_Sig_Force_Change,

    k_UART_SM_Evt_Sig_End,                           // Exclusive
    k_UART_SM_Evt_Sig_Max = k_UART_SM_Evt_Sig_End - 1,// Inclusive
    k_UART_SM_Evt_Sig_Lst = k_UART_SM_Evt_Sig_End - 1,// Inclusive
    k_UART_SM_Evt_Sig_Cnt = k_UART_SM_Evt_Sig_End
                         - k_UART_SM_Evt_Sig_Beg,	// Inclusive
	k_UART_SM_Evt_Sig_Ivd = k_UART_SM_Evt_Sig_End
};

/* Data signal k_UART_SM_Evt_Sig_Init_Instance can generate. */
struct UART_SM_Evt_Sig_Init_Instance{
    struct UART_Instance_Cfg cfg;
};

/* Data signal k_UART_SM_Sig_Write can generate. */
struct UART_SM_Evt_Sig_Write_MIDI{
    enum UART_Id id;
    uint8_t midi_status; 
    uint16_t raw_voltage; 
    uint8_t last_note;
    uint8_t ctrl_byte;
};


/* Events (i.e. signal + signal's data if any) UART State Machine generates. */
struct UART_SM_Evt{
	enum UART_SM_Evt_Sig sig;
	union UART_SM_Evt_Data{
        struct UART_SM_Evt_Sig_Init_Instance    init_inst;
        struct UART_SM_Evt_Sig_Write_MIDI       midi_write;
	}data;
};

#ifdef __cplusplus
}
#endif

#endif /* FKMG_UART_SM_EVT_H */
