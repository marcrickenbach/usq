/** ****************************************************************************
 * @brief Events generated by LED Driver module.
 *
 * The public events Sequencer module generates.
 */

#ifndef FKMG_LED_DRIVER_EVT_H
#define FKMG_LED_DRIVER_EVT_H

#ifdef __cplusplus
extern "C" {
#endif

/* *****************************************************************************
 * Includes
 */

#include <zephyr/kernel.h>

#include "id.h"

/* *****************************************************************************
 * Events
 */

/* Signals that can be generated as part of an event. */
enum LED_Driver_Evt_Sig{
    k_LED_Driver_Evt_Sig_Beg,                        // Inclusive
    k_LED_Driver_Evt_Sig_Min = k_LED_Driver_Evt_Sig_Beg,    // Inclusive
    k_LED_Driver_Evt_Sig_1st = k_LED_Driver_Evt_Sig_Beg,    // Inclusive

    k_LED_Driver_Evt_Sig_Instance_Initialized = k_LED_Driver_Evt_Sig_Beg,
    #if CONFIG_FKMG_SEQ_SHUTDOWN_ENABLED
    k_LED_Driver_Evt_Sig_Instance_Deinitialized,
    #endif
    k_LED_Driver_Evt_Sig_Write_Ready,
    k_LED_Driver_Evt_Sig_End,                        // Exclusive
    k_LED_Driver_Evt_Sig_Max = k_LED_Driver_Evt_Sig_End - 1,// Inclusive
    k_LED_Driver_Evt_Sig_Lst = k_LED_Driver_Evt_Sig_End - 1,// Inclusive
    k_LED_Driver_Evt_Sig_Cnt = k_LED_Driver_Evt_Sig_End
                      - k_LED_Driver_Evt_Sig_Beg,	  // Inclusive
	k_LED_Driver_Evt_Sig_Ivd = k_LED_Driver_Evt_Sig_End
};

/* Forward references to prevent include interdependent items getting declared
 * out-of-order. */
struct LED_Driver_Instance;

/* Data signal k_LED_Driver__Evt_Sig_Instance_Initialized can generate. */
struct LED_Driver_Evt_Data_Instance_Initialized{
    struct LED_Driver_Instance * p_inst;
};

/* Data signal k_LED_Driver__Evt_Sig_Changed can generate. */
struct LED_Driver_Evt_Data_Changed{
    enum LED_Driver_Id id;
    uint32_t    val;
};

/* Data signal k_LED_Driver_Evt_Sig_Write_Ready can generate. */
struct LED_Driver_Evt_Write_Ready{
    bool channel;
    uint16_t step;
    uint8_t offset;
    uint16_t val; 
};


/* Events (i.e. signal + signal's data if any) that can be generated. */
struct LED_Driver_Evt{
	enum LED_Driver_Evt_Sig sig;
	union LED_Driver_Evt_Data{
        struct LED_Driver_Evt_Data_Instance_Initialized initd;
        struct LED_Driver_Evt_Data_Changed              changed;
        struct LED_Driver_Evt_Write_Ready               write; 
	}data;
};

#ifdef __cplusplus
}
#endif

#endif /* FKMG_LED_DRIVER_EVT_H */
