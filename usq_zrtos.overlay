/* USQ_ZRTOS OVERLAY */

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/spi/spi.h>
#include <dt-bindings/timer/stm32-timer.h>
#include <dt-bindings/dma/stm32_dma.h>
#include <dt-bindings/i2c/i2c.h>


/{
    zephyr,user {

        gate-high-gpios      =   <&gpioa 15 GPIO_ACTIVE_HIGH>;
        gate-low-gpios      =   <&gpioc 10 GPIO_ACTIVE_HIGH>;

        led-17-gpios        =   <&gpioc 11 GPIO_ACTIVE_HIGH>;
        led-18-gpios        =   <&gpioc 12 GPIO_ACTIVE_HIGH>;
        led-19-gpios        =   <&gpiod 2 GPIO_ACTIVE_HIGH>;
        led-20-gpios        =   <&gpioc 1 GPIO_ACTIVE_HIGH>;
        led-21-gpios        =   <&gpiob 4 GPIO_ACTIVE_HIGH>;
        
        adc-addr-0-gpios    =   <&gpiob 0 GPIO_ACTIVE_HIGH>;
        adc-addr-1-gpios    =   <&gpiob 1 GPIO_ACTIVE_HIGH>;
        adc-addr-2-gpios    =   <&gpiob 2 GPIO_ACTIVE_HIGH>;

        adc-addr-bank-0-gpios = <&gpioc 4 GPIO_ACTIVE_LOW>;
        adc-addr-bank-1-gpios = <&gpioc 5 GPIO_ACTIVE_LOW>;
        adc-addr-bank-2-gpios = <&gpioc 6 GPIO_ACTIVE_LOW>;
        adc-addr-bank-3-gpios = <&gpioc 7 GPIO_ACTIVE_LOW>;
        adc-addr-bank-4-gpios = <&gpioc 8 GPIO_ACTIVE_LOW>;

        sw-addr-0-gpios     =   <&gpioa 0 GPIO_ACTIVE_HIGH>;
        sw-addr-1-gpios     =   <&gpioc 3 GPIO_ACTIVE_HIGH>;
        sw-addr-2-gpios     =   <&gpioc 2 GPIO_ACTIVE_HIGH>;

        sw-input-gpios      =   <&gpioa 1 GPIO_PULL_UP>;

        pp-trigger-high-gpios = <&gpiob 6 GPIO_PULL_DOWN>;
        rst-trigger-high-gpios = <&gpiob 7 GPIO_PULL_DOWN>;
        pp-trigger-low-gpios = <&gpiob 9 GPIO_PULL_DOWN>;
        rst-trigger-low-gpios = <&gpiob 8 GPIO_PULL_DOWN>;

        mode-global-gpios = <&gpiob 5 GPIO_PULL_DOWN>;

        led-le-gpios = <&gpiob 12 GPIO_PULL_DOWN>;
        led-blank-gpios = <&gpiob 14 GPIO_PULL_DOWN>;
    };

    chosen {
        zephyr,console = &usart1;
        zephyr,shell-uart = &usart1;
        zephyr,uart-mcumgr = &usart1;
    };

};

/**************************************** 
 * Disable Nucleo pins for btn and led */

&leds {
    status = "disabled"; 
};

&user_button {
    status = "disabled";
};

/**************************************/

&clk_hse {
	/delete-property/ hse-bypass;
};

&pll {
    /* FIXME: Former values. The values below are the highest possible values to get a precise 48MHz clock for the USB on PLLQ. We could get the clock to 180MHz if we could derive the USB clock from the PLLSAIP, but Zephyr doesn't yet support this. If we need these extra MHz revisit this, for now probably ok. */
	// div-m = <4>;
	// mul-n = <180>;
	// div-p = <2>;
	// div-q = <8>;
	// clocks = <&clk_hse>;
	// status = "okay";
    div-m = <8>;
	mul-n = <336>;
	div-p = <2>;
	div-q = <7>;
	clocks = <&clk_hse>;
	status = "okay";
};


&rcc {
	clocks = <&pll>;
	clock-frequency = <DT_FREQ_M(168)>;
	ahb-prescaler = <1>;
	apb1-prescaler = <4>; // was 4 
	apb2-prescaler = <2>; // was 2
};


&adc1 {
    pinctrl-0 = <&adc1_in7_pa7>;  
    pinctrl-names = "default";
    st,adc-prescaler = <2>;
    // st,adc-clock-source = <1>;
    status = "okay";  
};


&dac1 {
    pinctrl-0 = <&dac_out1_pa4 &dac_out2_pa5>;  
    pinctrl-names = "default";
    status = "okay";  
};


&can1 {
    status = "disabled";
};

&can2 {
    status = "disabled";
};

&spi1 {
    status = "disabled";
};


&spi2 {
    // compatible = "st,stm32-spi";
    status = "okay"; 
    pinctrl-0 = <&spi2_mosi_pb15 &spi2_sck_pb13>;
    pinctrl-names = "default";
    clock-frequency = <5625000>; //<1406250>;
    label = "SPI2";
    dmas = <&dma1 4 0 0x20040 0x03>; /* DMA1 Stream4 Channel3 for TX */
    dma-names = "tx";
    spidev: spi-dev@0 {
        compatible = "zephyr,spi-dev";
        reg = <0>;
    };
}; 

&i2c1 {
    status = "disabled";
};

&i2c2 {
    compatible = "st,stm32-i2c-v1";
    pinctrl-0 = <&i2c2_scl_pb10 &i2c2_sda_pb3>;
    pinctrl-names = "default";
    clock-frequency = <400000>; // 400 kHz
    dmas =  <&dma1 2 7 0x20480 0x03>, /* RX, DMA1 Stream 2 Channel 7, High priority, Byte size, Memory increment */
            <&dma1 7 7 0x20440 0x03>; /* TX, DMA1 Stream 7 Channel 7, High priority, Byte size, Memory increment */
    dma-names = "rx", "tx";
    status = "okay";
};

&i2c3 {
    status = "disabled";
};

&i2s2 {
    status = "disabled";
};

&usbotg_fs {
    compatible = "st,stm32-otgfs"; 
    pinctrl-0 = <&usb_otg_fs_dm_pa11 &usb_otg_fs_dp_pa12>;
    pinctrl-names = "default";
    // vbus-gpios = < &label >;
    status = "okay"; 
};

&usart1 {
    compatible = "st,stm32-uart";
    pinctrl-0 = <&usart1_rx_pa10 &usart1_tx_pa9>;
    pinctrl-names = "default";
    current-speed = <115200>;
    status = "okay"; 
};


&dma1 {
    status="okay";
};

&dma2 {
    compatible = "st,stm32-dma-v1";
    status="okay";
};


// TIMER 1 with PWM
&timers1 {
    status = "okay"; 
    led_pwm: pwm {
        compatible = "st,stm32-pwm";
        status = "okay";
        pinctrl-0 = <&tim1_ch1_pa8>;
        pinctrl-names = "default";
        #pwm-cells = <3>;
    };
};


&timers2 {
    status = "okay";
    st,prescaler = <9599>;
    st,countermode = <0>; 
    compatible = "st,stm32-timers";
    counter_timer1: counter {
        compatible = "st,stm32-counter";
        status = "okay";
    };
};

&timers3 {
    status = "okay";
    st,prescaler = <9599>;
    st,countermode = <0>;
    compatible = "st,stm32-timers";
    counter_timer2: counter {
        compatible = "st,stm32-counter";
        status = "okay";
    };
};

//Timer 4 for LED Driver Blank Pin Counter

&timers4 {
    status = "okay";
    st,prescaler = <90>; // 90MHz -> 1MHz
    st,countermode = <0>;
    compatible = "st,stm32-timers";
    counter_timer3: counter {
        compatible = "st,stm32-counter";
        status = "okay";
    };
};